/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI.PatientRole;

import Business.Enterprises.Enterprise;
import Business.Organization.DoctorConsultantOrg;
import Business.Organization.Org;
import Business.UserAccount.User_Account;
import Business.WorkStream.PatientAppRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.text.DateFormat;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author Pranali
 */
public class BookAppointmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BookAppointmentJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private User_Account userAccount;
    boolean emptyValidationStatus = true;
    boolean validationCheck = true;

    BookAppointmentJPanel(JPanel userProcessContainer, User_Account userAccount, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        backJButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dateChooserField = new com.toedter.calendar.JDateChooser();
        emaillbl = new javax.swing.JLabel();
        txtmessage = new javax.swing.JTextField();
        btnsave = new javax.swing.JButton();
        emailtxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(239, 241, 228));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setBackground(new java.awt.Color(51, 51, 51));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/back_button.png"))); // NOI18N
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, 31));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel2.setText("Choose Date");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        dateChooserField.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(dateChooserField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 132, -1));

        emaillbl.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        emaillbl.setText("Email");
        jPanel2.add(emaillbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        txtmessage.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jPanel2.add(txtmessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 132, -1));

        btnsave.setBackground(new java.awt.Color(83, 124, 142));
        btnsave.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnsave.setForeground(new java.awt.Color(255, 255, 255));
        btnsave.setText("Book Appointment");
        btnsave.setBorder(null);
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 154, 37));

        emailtxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailtxtActionPerformed(evt);
            }
        });
        jPanel2.add(emailtxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 130, 130, -1));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel4.setText("Message");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 250, 230));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/patient2.png"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 150, 150));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 300, 960));

        jPanel6.setBackground(new java.awt.Color(193, 212, 227));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel3.setText("Book Doctor's Appointment");
        jPanel6.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, -1, -1));

        add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 1230, 90));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/patient_new.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 1220, 870));
    }// </editor-fold>//GEN-END:initComponents

    public void sendMail(String emailId)
            
    {
    final String username = "code.crunch.sih@gmail.com";
		final String password = "pksqhbdswlwsllfr";

		Properties props = new Properties();
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");

		Session session = Session.getInstance(props,
		  new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(username, password);
			}
		  });

		try {

			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress("code.crunch.sih@gmail.com"));
			message.setRecipients(Message.RecipientType.TO,
				InternetAddress.parse(emailId));
			message.setSubject("Appointment Request by "+userAccount);
			message.setText("Appointment Request sent successfuly.");

			Transport.send(message);


		} catch (MessagingException e) {
			throw new RuntimeException(e);
		}
	}
    
    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        PatientWorkAreaJPanel pwjp = (PatientWorkAreaJPanel) component;
        pwjp.populateAppointmentListTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        
        try{
            if(EmpytyFieldValidation()){
                if(RegexValidation()){
                    String message = txtmessage.getText();
        
                    Date date = dateChooserField.getDate();
                    String strDate = DateFormat.getDateInstance().format(date);

                    PatientAppRequest request = new PatientAppRequest();
                    request.setMessage(message);
                    request.setAppointmentdate(strDate);
                    request.setSender(userAccount);
                    request.setStatus("Sent By Patient");

                    Org org = null;
                    for (Org organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                    if (organization instanceof DoctorConsultantOrg) {
                    org = organization;

                    break;
                }
            }
            if (org != null) {
                int a = org.getWorkStream().getWorkRequestList().hashCode();
                org.getWorkStream().getWorkRequestList().add(request);
                userAccount.getWorkStream().getWorkRequestList().add(request);
                String emailId = "code.crunch.sih@gmail.com";
                sendMail(emailId);
        }
        JOptionPane.showMessageDialog(null, "Appointment booked successfully");
        txtmessage.setText("");
//                   
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Please check details again");
                emptyValidationStatus=true;
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error booking appointment, Try again");
            System.out.println(e.toString());
            emptyValidationStatus=true;
        }
        
//        String message = txtmessage.getText();
//        
//        Date date = dateChooserField.getDate();
//        String strDate = DateFormat.getDateInstance().format(date);
//
//        PatientAppRequest request = new PatientAppRequest();
//        request.setMessage(message);
//        request.setAppointmentdate(strDate);
//        request.setSender(userAccount);
//        request.setStatus("Sent By Patient");
//
//        Org org = null;
//        for (Org organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
//            if (organization instanceof DoctorConsultantOrg) {
//                org = organization;
//
//                break;
//            }
//        }
//        if (org != null) {
//            int a = org.getWorkStream().getWorkRequestList().hashCode();
//            org.getWorkStream().getWorkRequestList().add(request);
//            userAccount.getWorkStream().getWorkRequestList().add(request);
//        }
//        JOptionPane.showMessageDialog(null, "Appointment booked successfully");
//        txtmessage.setText("");
        
        

    }//GEN-LAST:event_btnsaveActionPerformed

    private void emailtxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailtxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailtxtActionPerformed

    private boolean RegexValidation() {
        
        if(!emailtxt.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            emailtxt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            emailtxt.setToolTipText("Please enter a valid mobile number");
            validationCheck=false;
        }
        
        if(emailtxt.getText().matches("^[A-Za-z0-9+_.-]+@(.+)$"))
        {
            emailtxt.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return validationCheck;
    }
    
    private boolean EmpytyFieldValidation() {
        if(txtmessage.getText().equals(null) || txtmessage.getText().trim().isEmpty() )
        {
            txtmessage.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtmessage.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtmessage.getText().equals(null) && !txtmessage.getText().trim().isEmpty() )
        {
            txtmessage.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(emailtxt.getText().equals(null) || emailtxt.getText().trim().isEmpty() )
        {
            emailtxt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            emailtxt.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!emailtxt.getText().equals(null) && !emailtxt.getText().trim().isEmpty() )
        {
            emailtxt.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        if(dateChooserField.getDate().equals(null) )
        {
            dateChooserField.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            dateChooserField.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!dateChooserField.getDate().equals(null))
        {
            txtmessage.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        return emptyValidationStatus;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnsave;
    private com.toedter.calendar.JDateChooser dateChooserField;
    private javax.swing.JLabel emaillbl;
    private javax.swing.JTextField emailtxt;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField txtmessage;
    // End of variables declaration//GEN-END:variables
}
